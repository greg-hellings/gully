<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.thehellings.gully</groupId>
	<artifactId>gully</artifactId>
	<packaging>pom</packaging>
	<version>0.9-SNAPSHOT</version>

	<!-- Properties which might need updating -->
	<properties>
		<!-- dependency versioning -->
		<agglutinator-version>1.2</agglutinator-version>
		<apache-http-fluent-version>4.5.3</apache-http-fluent-version>
		<junit-version>4.12</junit-version>
		<mockito-core-version>2.10.0</mockito-core-version>
		<undertow-core-version>1.4.20.Final</undertow-core-version>

		<!-- plugin versioning -->
		<jacoco-version>0.7.9</jacoco-version>
		<maven-compiler-version>3.7.0</maven-compiler-version>
		<maven-gpg-version>1.6</maven-gpg-version>
		<maven-javadoc-version>2.10.4</maven-javadoc-version>
		<maven-release-version>2.5.3</maven-release-version>
		<maven-source-version>3.0.1</maven-source-version>
		<nexus-staging-version>1.6.8</nexus-staging-version>

		<!-- other values used by the build tools -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<code-version>1.8</code-version>
	</properties>

	<!-- module listing -->
	<modules>
		<module>gully-server</module>
		<module>css</module>
	</modules>

	<!-- Parent projcet metadata -->
	<name>gully</name>
	<description>The Gully framework, leveraging Undertow's core functionality to offer HTTP and HTML/CCS/JS services
	and standalone apps a simple and straightforward method of writing easily maintainable applications.</description>
	<url>https://github.com/greg-hellings/gully</url>

	<!-- Whole project metadata -->
	<developers>
		<developer>
			<id>greg.hellings</id>
			<name>Greg Hellings</name>
			<email>greg.hellings+maven@gmail.com</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>BSD</name>
			<url>https://opensource.org/licenses/BSD-3-Clause</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:https://github.com/greg-hellings/gully.git</connection>
		<developerConnection>scm:git:git@github.com:greg-hellings/gully.git</developerConnection>
		<url>git@github.com:greg-hellings/gully.git</url>
		<tag>HEAD</tag>
	</scm>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<!-- Test-time dependencies and utilities that are needed -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-core-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>fluent-hc</artifactId>
			<version>${apache-http-fluent-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build plugins and profiles -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-version}</version>
				<configuration>
					<source>${code-version}</source>
					<target>${code-version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy nexus-staging:release</goals>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-version}</version>
				<executions>
					<execution>
						<id>test-docs</id>
						<phase>test</phase>
						<goals>
							<goal>javadoc</goal>
							<goal>test-javadoc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
							<goal>check</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>target/jacoco.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>target/jacoco-ut</outputDirectory>
							<rules>
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<excludes>
										<exclude>*Test</exclude>
									</excludes>
									<limits>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven-source-version}</version>
						<executions>
							<execution>
								<id>attach-source</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-version}</version>
						<executions>
							<execution>
								<id>attach-javadoc</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
